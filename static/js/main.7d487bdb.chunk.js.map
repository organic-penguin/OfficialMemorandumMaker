{"version":3,"sources":["images/DoD Seal.PNG","components/About.js","components/GenerateWordDocument.js","components/AdditionalParagraphs.js","components/Form.js","components/SetTest.js","components/Home.js","components/GenerateMemorandum.js","components/Memorandum.js","App.js","index.js"],"names":["module","exports","LSGETATTN","LSGETFROM","LSGETSUBJECT","LSGETPARA","LSGETUNIT","LSGETDATE","LSGETDUTYTITLE","LSGETRANK","LSGETWRITERSNAME","LSGETBRANCH","LSGETNUMBEROFPARAGRAPHS","paragraphInfo","base64image","insertMultipleParagraphs","paras","sessionStorage","getItem","result","TextRun","break","PARAGRAPH","GenerateWordDocument","generateWrappedDocumentWithHeader","doc","Document","creator","title","description","styles","paragraphStyles","id","name","basedOn","next","quickFormat","run","size","font","bold","console","log","DoDSeal","toString","dodseal","Media","addImage","Buffer","from","floating","horizontalPosition","offset","verticalPosition","addSection","height","width","headers","first","Header","children","Paragraph","spacing","before","text","alignment","AlignmentType","CENTER","style","RIGHT","indent","left","Packer","toBlob","then","blob","saveAs","generateWrappedDocumentNoHeader","this","fillVariables","display","margin","onClick","type","Component","LSGETLOGO","titlePage","header","slice","ParagraphInputs","props","paragraphArray","map","val","index","paraID","key","class","htmlFor","data-id","placeholder","value","paraInfo","className","currentDate","Date","setDate","getDate","formattedDateTwo","Moment","toISOString","format","Form","handleParagraphChange","e","includes","target","state","dataset","setState","addParagraph","prevState","onFormSubmit","event","preventDefault","handleSubmit","initialState","clearForm","memorandum","attn","subject","para1","para2","unit","date","dutytitle","rank","writersname","branch","clear","alert","window","location","reload","handleChange","bind","handleChangeUpper","conversionArray","x","push","writersNameUpper","toUpperCase","onSubmit","onChange","required","defaultValue","disabled","form","SetTest","testMemoSubmit","toDataURL","url","callback","xhr","XMLHttpRequest","onload","reader","FileReader","onloadend","readAsDataURL","response","open","responseType","send","cursorY","Home","toDashboard","MEMOVAR","convertParagraphArray","setItem","dataUrl","testMemo","setTimeout","LSGETPARA2","to","marginTop","pdf","jsPDF","orientation","addWrappedText","textWidth","fontSize","fontType","lineSpacing","xPosition","initialYPosition","FROMHEIGHT","pageWrapInitialYPosition","setFontType","setFontSize","textLines","splitTextToSize","pageHeight","internal","pageSize","forEach","lineText","addPage","extraParagraphs","GenerateMemorandum","dateHeight","attnHEIGHT","generateWrappedMemorandum2","setFont","setFontStyle","DATEHEIGHT","ATTNHEIGHT","oneLineHeight","setProperties","osName","string","output","document","isMobile","embed","elseX","write","close","extraParagraphWords","Memorandum","processExtraParagraphs","locale","paragraphItems","entries","Review","filled","undefined","App","devMode","currentState","basename","boxShadow","backgroundColor","flex","padding","AirForceWriterLink","TheTongueAndQuillLink","paddingTop","GitHubLink","ariaHidden","exact","path","component","About","TESTParametersButton","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7d487bdb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/DoD Seal.c4c16d8a.PNG\";","import React, {Component} from 'react';\r\nimport { Document, Media, Packer, Paragraph, TextRun, Header, AlignmentType } from \"docx\";\r\nimport DoDSeal from '../images/DoD Seal.PNG'\r\nimport {saveAs} from 'file-saver';\r\n\r\n\r\nvar LSGETATTN;\r\nvar LSGETFROM;\r\nvar LSGETSUBJECT;\r\nvar LSGETPARA;\r\nvar LSGETUNIT;\r\nvar LSGETDATE;\r\nvar LSGETDUTYTITLE;\r\nvar LSGETRANK;\r\nvar LSGETWRITERSNAME;\r\nvar LSGETBRANCH;\r\n\r\nvar LSGETNUMBEROFPARAGRAPHS;\r\n\r\nvar paragraphInfo = [];\r\n\r\nconst base64image = \"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\"\r\n\r\n\r\nfunction insertMultipleParagraphs() {\r\n  LSGETNUMBEROFPARAGRAPHS = sessionStorage.getItem(\"extraParagraphs\");\r\n  var paras;\r\n  var result = '2.  ' + sessionStorage.getItem(0);\r\n  paragraphInfo[0]=new TextRun(result).break();\r\n\r\n  for (paras = 1; paras <= LSGETNUMBEROFPARAGRAPHS; paras++) {\r\n    var PARAGRAPH = (paras + 2) + '.  ' + (sessionStorage.getItem(paras));\r\n    paragraphInfo[paras] = new TextRun(PARAGRAPH).break().break();\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nclass GenerateWordDocument extends Component {\r\n\r\n\r\ngenerateWrappedDocumentWithHeader = () =>{\r\n  // Create document\r\n  const doc = new Document({\r\n         creator: \"USAF\",\r\n         title: \"Sample Document\",\r\n         description: \"A brief example of using docx\",\r\n         styles:{\r\n           paragraphStyles: [{\r\n             id: \"Body1\",\r\n             name: \"Body1\",\r\n             basedOn: \"Normal\",\r\n             next: \"Normal\",\r\n             quickFormat: true,\r\n             run: {\r\n                 size: 24,\r\n             }},\r\n             {\r\n               id: \"Department\",\r\n               name: \"Department\",\r\n               basedOn: \"Normal\",\r\n               next: \"Normal\",\r\n               quickFormat: true,\r\n               run: {\r\n                   size: 24,\r\n                   font: \"arial\",\r\n                   bold: true\r\n               }},\r\n               {\r\n                 id: \"Unit\",\r\n                 name: \"Unit\",\r\n                 basedOn: \"Normal\",\r\n                 next: \"Normal\",\r\n                 quickFormat: true,\r\n                 run: {\r\n                     size: 24,\r\n                     font: \"arial\"\r\n                 }}\r\n\r\n           ]\r\n         }\r\n       })\r\n     insertMultipleParagraphs();\r\n\r\n     console.log(DoDSeal.toString(\"base64\"));\r\n     const dodseal = Media.addImage(doc, Buffer.from(base64image, \"base64\"), 105, 105,{\r\n       floating: {\r\n         horizontalPosition: {\r\n           offset: 400000\r\n         },\r\n         verticalPosition: {\r\n           offset: 405000\r\n         }\r\n       }\r\n     });\r\n\r\n     doc.addSection({\r\n       size:{ height: 15840,\r\n            width: 12240\r\n          },\r\n       headers: {\r\n         first: new Header({\r\n           children: [\r\n             new Paragraph({\r\n               spacing:{\r\n                 before: 280\r\n               },\r\n               text: \"DEPARTMENT OF THE AIR FORCE\",\r\n               alignment: AlignmentType.CENTER,\r\n               style: \"Department\"\r\n             }),\r\n             new Paragraph({\r\n               text: LSGETUNIT,\r\n               alignment: AlignmentType.CENTER,\r\n               style: \"Unit\"\r\n             }),\r\n             new Paragraph({\r\n               children: [\r\n                 dodseal\r\n               ]\r\n             })\r\n                    ]\r\n         })\r\n       },\r\n         children: [\r\n              new Paragraph({\r\n              spacing: {\r\n                before: 720\r\n              },\r\n              text: LSGETDATE,\r\n              alignment: AlignmentType.RIGHT,\r\n              style: \"Body1\"\r\n             }),\r\n             new Paragraph({\r\n              text: \"MEMORANDUM FOR  \" + LSGETATTN,\r\n              style: \"Body1\"\r\n             }),\r\n             new Paragraph({style: \"Body1\" }), //SINGLE SPACE CARRAIGE RETURN\r\n             new Paragraph({\r\n              text: \"FROM  \" + LSGETFROM,\r\n              style: \"Body1\"\r\n             }),\r\n             new Paragraph({style: \"Body1\" }), //SINGLE SPACE CARRAIGE RETURN\r\n             new Paragraph({\r\n              text: \"SUBJECT  \" + LSGETSUBJECT,\r\n              style: \"Body1\"\r\n             }),\r\n             new Paragraph({style: \"Body1\" }), //SINGLE SPACE CARRAIGE RETURN\r\n             new Paragraph({\r\n              text: \"1.  \" + LSGETPARA,\r\n              style: \"Body1\"\r\n            }),\r\n            new Paragraph({\r\n              children:[\r\n                paragraphInfo[0],\r\n                paragraphInfo[1],\r\n                paragraphInfo[2],\r\n                paragraphInfo[3],\r\n                paragraphInfo[4],\r\n                paragraphInfo[5],\r\n                paragraphInfo[6],\r\n                paragraphInfo[7],\r\n                paragraphInfo[8],\r\n                paragraphInfo[9]\r\n              ],\r\n             style: \"Body1\"\r\n           }),\r\n           new Paragraph({\r\n             indent:{\r\n               left: 5040\r\n             },\r\n             children:[\r\n               new TextRun(LSGETWRITERSNAME + ', ' + LSGETRANK + ', ' + LSGETBRANCH).break().break().break().break(),\r\n               new TextRun(LSGETDUTYTITLE).break()\r\n             ],\r\n             style: \"Body1\"\r\n           }),\r\n\r\n         ],\r\n     });\r\n\r\n\r\n\r\n\r\n\r\n\r\n  Packer.toBlob(doc).then((blob) => {\r\n      // saveAs from FileSaver will download the file\r\n      saveAs(blob, \"example.docx\");\r\n  });\r\n\r\n}\r\n\r\n\r\ngenerateWrappedDocumentNoHeader = () =>{\r\n  // Create document\r\n  const doc = new Document({\r\n         creator: \"USAF\",\r\n         title: \"Sample Document\",\r\n         description: \"A brief example of using docx\",\r\n         styles:{\r\n           paragraphStyles: [{\r\n             id: \"Body1\",\r\n             name: \"Body1\",\r\n             basedOn: \"Normal\",\r\n             next: \"Normal\",\r\n             quickFormat: true,\r\n             run: {\r\n                 size: 24,\r\n             }},\r\n             {\r\n               id: \"Department\",\r\n               name: \"Department\",\r\n               basedOn: \"Normal\",\r\n               next: \"Normal\",\r\n               quickFormat: true,\r\n               run: {\r\n                   size: 24,\r\n                   font: \"arial\",\r\n                   bold: true\r\n               }},\r\n               {\r\n                 id: \"Unit\",\r\n                 name: \"Unit\",\r\n                 basedOn: \"Normal\",\r\n                 next: \"Normal\",\r\n                 quickFormat: true,\r\n                 run: {\r\n                     size: 24,\r\n                     font: \"arial\"\r\n                 }}\r\n\r\n           ]\r\n         }\r\n       })\r\n     insertMultipleParagraphs();\r\n\r\n     console.log(DoDSeal.toString(\"base64\"));\r\n     const dodseal = Media.addImage(doc, Buffer.from(base64image, \"base64\"), 105, 105,{\r\n       floating: {\r\n         horizontalPosition: {\r\n           offset: 400000\r\n         },\r\n         verticalPosition: {\r\n           offset: 405000\r\n         }\r\n       }\r\n     });\r\n\r\n     doc.addSection({\r\n       size:{ height: 15840,\r\n            width: 12240\r\n          },\r\n\r\n         children: [\r\n           new Paragraph({\r\n             text: \"DEPARTMENT OF THE AIR FORCE\",\r\n             alignment: AlignmentType.CENTER,\r\n             style: \"Department\"\r\n           }),\r\n           new Paragraph({\r\n             text: LSGETUNIT,\r\n             alignment: AlignmentType.CENTER,\r\n             style: \"Unit\"\r\n           }),\r\n           new Paragraph({\r\n             children: [\r\n               dodseal\r\n             ]\r\n           }),\r\n              new Paragraph({\r\n              spacing: {\r\n                before: 720\r\n              },\r\n              text: LSGETDATE,\r\n              alignment: AlignmentType.RIGHT,\r\n              style: \"Body1\"\r\n             }),\r\n             new Paragraph({\r\n              text: \"MEMORANDUM FOR  \" + LSGETATTN,\r\n              style: \"Body1\"\r\n             }),\r\n             new Paragraph({style: \"Body1\" }), //SINGLE SPACE CARRAIGE RETURN\r\n             new Paragraph({\r\n              text: \"FROM  \" + LSGETFROM,\r\n              style: \"Body1\"\r\n             }),\r\n             new Paragraph({style: \"Body1\" }), //SINGLE SPACE CARRAIGE RETURN\r\n             new Paragraph({\r\n              text: \"SUBJECT  \" + LSGETSUBJECT,\r\n              style: \"Body1\"\r\n             }),\r\n             new Paragraph({style: \"Body1\" }), //SINGLE SPACE CARRAIGE RETURN\r\n             new Paragraph({\r\n              text: \"1.  \" + LSGETPARA,\r\n              style: \"Body1\"\r\n            }),\r\n            new Paragraph({\r\n              children:[\r\n                paragraphInfo[0],\r\n                paragraphInfo[1],\r\n                paragraphInfo[2],\r\n                paragraphInfo[3],\r\n                paragraphInfo[4],\r\n                paragraphInfo[5],\r\n                paragraphInfo[6],\r\n                paragraphInfo[7],\r\n                paragraphInfo[8],\r\n                paragraphInfo[9]\r\n              ],\r\n             style: \"Body1\"\r\n           }),\r\n           new Paragraph({\r\n             indent:{\r\n               left: 5040\r\n             },\r\n             children:[\r\n               new TextRun(LSGETWRITERSNAME + ', ' + LSGETRANK + ', ' + LSGETBRANCH).break().break().break().break(),\r\n               new TextRun(LSGETDUTYTITLE).break()\r\n             ],\r\n             style: \"Body1\"\r\n           }),\r\n\r\n         ],\r\n     });\r\n\r\n\r\n\r\n\r\n\r\n\r\n  Packer.toBlob(doc).then((blob) => {\r\n      // saveAs from FileSaver will download the file\r\n      saveAs(blob, \"example.docx\");\r\n  });\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfillVariables() {\r\n  LSGETATTN = sessionStorage.getItem(\"attn\");\r\n  LSGETFROM = sessionStorage.getItem(\"from\");\r\n  LSGETSUBJECT = sessionStorage.getItem(\"subject\");\r\n  LSGETPARA = sessionStorage.getItem(\"para1\");\r\n  LSGETUNIT = sessionStorage.getItem(\"unit\");\r\n  LSGETDATE = sessionStorage.getItem(\"date\");\r\n  LSGETDUTYTITLE = sessionStorage.getItem(\"dutytitle\");\r\n  LSGETRANK = sessionStorage.getItem(\"rank\");\r\n  LSGETWRITERSNAME = sessionStorage.getItem(\"writersname\");\r\n  LSGETBRANCH = sessionStorage.getItem(\"branch\");\r\n}\r\n\r\n  render() {\r\n    this.fillVariables();\r\n    return (<div style={{display: 'inline'}}>\r\n\r\n      <button style={{margin:'5px'}} onClick={this.generateWrappedDocumentWithHeader} type=\"submit\">\r\n        Generate Word Document (Must Enter Header and Select 'Different First Page')\r\n      </button>\r\n      <button style={{margin:'5px'}} onClick={this.generateWrappedDocumentWithHeader} type=\"submit\">\r\n        Generate Word Document Without Header\r\n      </button>\r\n\r\n    </div>)\r\n  }\r\n}\r\n\r\nexport default GenerateWordDocument;\r\n","import React, {\r\n  Component\r\n} from 'react';\r\nimport {\r\n  Document,\r\n  Media,\r\n  Packer,\r\n  Paragraph,\r\n  TextRun,\r\n  Header,\r\n  AlignmentType,\r\n} from \"docx\";\r\nimport DoDSeal from '../images/DoD Seal.PNG'\r\nimport {\r\n  saveAs\r\n} from 'file-saver';\r\n\r\nvar LSGETATTN;\r\nvar LSGETFROM;\r\nvar LSGETSUBJECT;\r\nvar LSGETPARA;\r\nvar LSGETUNIT;\r\nvar LSGETDATE;\r\nvar LSGETDUTYTITLE;\r\nvar LSGETRANK;\r\nvar LSGETWRITERSNAME;\r\nvar LSGETBRANCH;\r\nvar LSGETNUMBEROFPARAGRAPHS;\r\nvar LSGETLOGO;\r\n\r\nvar paragraphInfo = [];\r\n\r\nfunction insertMultipleParagraphs() {\r\n  LSGETNUMBEROFPARAGRAPHS = sessionStorage.getItem(\"extraParagraphs\");\r\n  var paras;\r\n  var result = '2.  ' + sessionStorage.getItem(0);\r\n  paragraphInfo[0] = new TextRun(result).break();\r\n  for (paras = 1; paras <= LSGETNUMBEROFPARAGRAPHS; paras++) {\r\n    var PARAGRAPH = (paras + 2) + '.  ' + (sessionStorage.getItem(paras));\r\n    paragraphInfo[paras] = new TextRun(PARAGRAPH).break().break();\r\n  }\r\n}\r\nclass GenerateWordDocument extends Component {\r\n  generateWrappedDocumentWithHeader = () => {\r\n    // Create document\r\n    const doc = new Document({\r\n      creator: \"USAF\",\r\n      title: \"Sample Document\",\r\n      description: \"A brief example of using docx\",\r\n      titlePage: true,\r\n      styles: {\r\n        paragraphStyles: [{\r\n            id: \"Body1\",\r\n            name: \"Body1\",\r\n            basedOn: \"Normal\",\r\n            next: \"Normal\",\r\n            quickFormat: true,\r\n            run: {\r\n              size: 24,\r\n            }\r\n          },\r\n          {\r\n            id: \"Department\",\r\n            name: \"Department\",\r\n            basedOn: \"Normal\",\r\n            next: \"Normal\",\r\n            quickFormat: true,\r\n            run: {\r\n              size: 24,\r\n              font: \"arial\",\r\n              bold: true\r\n            }\r\n          },\r\n          {\r\n            id: \"Unit\",\r\n            name: \"Unit\",\r\n            basedOn: \"Normal\",\r\n            next: \"Normal\",\r\n            quickFormat: true,\r\n            run: {\r\n              size: 24,\r\n              font: \"arial\"\r\n            }\r\n          }\r\n\r\n           ]\r\n      }\r\n    })\r\n    insertMultipleParagraphs();\r\n    const dodseal = Media.addImage(doc, Buffer.from(LSGETLOGO, \"base64\"), 105, 105, {\r\n      floating: {\r\n        horizontalPosition: {\r\n          offset: 400000\r\n        },\r\n        verticalPosition: {\r\n          offset: 405000\r\n        }\r\n      }\r\n    });\r\n    doc.addSection({\r\n      size: {\r\n        height: 15840,\r\n        width: 12240\r\n      },\r\n      margin: {\r\n        header: 0\r\n      },\r\n      headers: {\r\n        first: new Header({\r\n          children: [\r\n             new Paragraph({\r\n              spacing: {\r\n                before: 280\r\n              },\r\n              text: \"DEPARTMENT OF THE AIR FORCE\",\r\n              alignment: AlignmentType.CENTER,\r\n              style: \"Department\"\r\n            }),\r\n             new Paragraph({\r\n              text: LSGETUNIT,\r\n              alignment: AlignmentType.CENTER,\r\n              style: \"Unit\"\r\n            }),\r\n             new Paragraph({\r\n              children: [\r\n                 dodseal\r\n               ]\r\n            })\r\n                    ]\r\n        })\r\n      },\r\n      children: [\r\n              new Paragraph({\r\n          spacing: {\r\n            before: 720\r\n          },\r\n          text: LSGETDATE,\r\n          alignment: AlignmentType.RIGHT,\r\n          style: \"Body1\"\r\n        }),\r\n             new Paragraph({\r\n          text: \"MEMORANDUM FOR  \" + LSGETATTN,\r\n          style: \"Body1\"\r\n        }),\r\n             new Paragraph({\r\n          style: \"Body1\"\r\n        }), //SINGLE SPACE CARRAIGE RETURN\r\n             new Paragraph({\r\n          text: \"FROM  \" + LSGETFROM,\r\n          style: \"Body1\"\r\n        }),\r\n             new Paragraph({\r\n          style: \"Body1\"\r\n        }), //SINGLE SPACE CARRAIGE RETURN\r\n             new Paragraph({\r\n          text: \"SUBJECT  \" + LSGETSUBJECT,\r\n          style: \"Body1\"\r\n        }),\r\n             new Paragraph({\r\n          style: \"Body1\"\r\n        }), //SINGLE SPACE CARRAIGE RETURN\r\n             new Paragraph({\r\n          text: \"1.  \" + LSGETPARA,\r\n          style: \"Body1\"\r\n        }),\r\n            new Paragraph({\r\n          children: [\r\n                paragraphInfo[0],\r\n                paragraphInfo[1],\r\n                paragraphInfo[2],\r\n                paragraphInfo[3],\r\n                paragraphInfo[4],\r\n                paragraphInfo[5],\r\n                paragraphInfo[6],\r\n                paragraphInfo[7],\r\n                paragraphInfo[8],\r\n                paragraphInfo[9]\r\n              ],\r\n          style: \"Body1\"\r\n        }),\r\n           new Paragraph({\r\n          indent: {\r\n            left: 5040\r\n          },\r\n          children: [\r\n               new TextRun(LSGETWRITERSNAME + ', ' + LSGETRANK + ', ' + LSGETBRANCH).break().break().break().break(),\r\n               new TextRun(LSGETDUTYTITLE).break()\r\n             ],\r\n          style: \"Body1\"\r\n        }),\r\n\r\n         ],\r\n    });\r\n    Packer.toBlob(doc).then((blob) => {\r\n      // saveAs from FileSaver will download the file\r\n      saveAs(blob, LSGETSUBJECT + \".docx\");\r\n    });\r\n  }\r\n  generateWrappedDocumentNoHeader = () => {\r\n    console.log(\"NO HEADER\");\r\n    // Create document\r\n    const doc = new Document({\r\n      creator: \"USAF\",\r\n      title: \"Sample Document\",\r\n      description: \"A brief example of using docx\",\r\n      styles: {\r\n        paragraphStyles: [{\r\n            id: \"Body1\",\r\n            name: \"Body1\",\r\n            basedOn: \"Normal\",\r\n            next: \"Normal\",\r\n            quickFormat: true,\r\n            run: {\r\n              size: 24,\r\n            }\r\n          },\r\n          {\r\n            id: \"Department\",\r\n            name: \"Department\",\r\n            basedOn: \"Normal\",\r\n            next: \"Normal\",\r\n            quickFormat: true,\r\n            run: {\r\n              size: 24,\r\n              font: \"arial\",\r\n              bold: true\r\n            }\r\n          },\r\n          {\r\n            id: \"Unit\",\r\n            name: \"Unit\",\r\n            basedOn: \"Normal\",\r\n            next: \"Normal\",\r\n            quickFormat: true,\r\n            run: {\r\n              size: 24,\r\n              font: \"arial\"\r\n            }\r\n          }\r\n\r\n           ]\r\n      }\r\n    })\r\n    insertMultipleParagraphs();\r\n    const dodseal = Media.addImage(doc, Buffer.from(LSGETLOGO, \"base64\"), 105, 105, {\r\n      floating: {\r\n        horizontalPosition: {\r\n          offset: 400000\r\n        },\r\n        verticalPosition: {\r\n          offset: 405000\r\n        }\r\n      }\r\n    });\r\n    doc.addSection({\r\n      size: {\r\n        height: 15840,\r\n        width: 12240\r\n      },\r\n      children: [\r\n           new Paragraph({\r\n          text: \"DEPARTMENT OF THE AIR FORCE\",\r\n          alignment: AlignmentType.CENTER,\r\n          style: \"Department\"\r\n        }),\r\n           new Paragraph({\r\n          text: LSGETUNIT,\r\n          alignment: AlignmentType.CENTER,\r\n          style: \"Unit\"\r\n        }),\r\n           new Paragraph({\r\n          children: [\r\n               dodseal\r\n             ]\r\n        }),\r\n            new Paragraph({\r\n            spacing: {\r\n            before: 720\r\n          },\r\n          text: LSGETDATE,\r\n          alignment: AlignmentType.RIGHT,\r\n          style: \"Body1\"\r\n        }),\r\n             new Paragraph({\r\n          text: \"MEMORANDUM FOR  \" + LSGETATTN,\r\n          style: \"Body1\"\r\n        }),\r\n             new Paragraph({\r\n          style: \"Body1\"\r\n        }), //SINGLE SPACE CARRAIGE RETURN\r\n             new Paragraph({\r\n          text: \"FROM  \" + LSGETFROM,\r\n          style: \"Body1\"\r\n        }),\r\n             new Paragraph({\r\n          style: \"Body1\"\r\n        }), //SINGLE SPACE CARRAIGE RETURN\r\n             new Paragraph({\r\n          text: \"SUBJECT  \" + LSGETSUBJECT,\r\n          style: \"Body1\"\r\n        }),\r\n             new Paragraph({\r\n          style: \"Body1\"\r\n        }), //SINGLE SPACE CARRAIGE RETURN\r\n             new Paragraph({\r\n          text: \"1.  \" + LSGETPARA,\r\n          style: \"Body1\"\r\n        }),\r\n            new Paragraph({\r\n          children: [\r\n                paragraphInfo[0],\r\n                paragraphInfo[1],\r\n                paragraphInfo[2],\r\n                paragraphInfo[3],\r\n                paragraphInfo[4],\r\n                paragraphInfo[5],\r\n                paragraphInfo[6],\r\n                paragraphInfo[7],\r\n                paragraphInfo[8],\r\n                paragraphInfo[9]\r\n              ],\r\n          style: \"Body1\"\r\n        }),\r\n           new Paragraph({\r\n          indent: {\r\n            left: 5040\r\n          },\r\n          children: [\r\n               new TextRun(LSGETWRITERSNAME + ', ' + LSGETRANK + ', ' + LSGETBRANCH).break().break().break().break(),\r\n               new TextRun(LSGETDUTYTITLE).break()\r\n             ],\r\n          style: \"Body1\"\r\n        }),\r\n\r\n         ],\r\n    });\r\n    Packer.toBlob(doc).then((blob) => {\r\n      // saveAs from FileSaver will download the file\r\n      saveAs(blob, LSGETSUBJECT + \".docx\");\r\n    });\r\n  }\r\n  fillVariables() {\r\n    LSGETATTN = sessionStorage.getItem(\"attn\");\r\n    LSGETFROM = sessionStorage.getItem(\"from\");\r\n    LSGETSUBJECT = sessionStorage.getItem(\"subject\");\r\n    LSGETPARA = sessionStorage.getItem(\"para1\");\r\n    LSGETUNIT = sessionStorage.getItem(\"unit\");\r\n    LSGETDATE = sessionStorage.getItem(\"date\");\r\n    LSGETDUTYTITLE = sessionStorage.getItem(\"dutytitle\");\r\n    LSGETRANK = sessionStorage.getItem(\"rank\");\r\n    LSGETWRITERSNAME = sessionStorage.getItem(\"writersname\");\r\n    LSGETBRANCH = sessionStorage.getItem(\"branch\");\r\n\r\n    //Receive LOGO Base64 and cut off the descriptors. DOCX.JS auto-fills requirements and does not accept redundant descriptors\r\n    LSGETLOGO = sessionStorage.getItem(\"MemoHeaderLogoBase\");\r\n    if(LSGETLOGO == null){}else{\r\n      LSGETLOGO = LSGETLOGO.slice(22);\r\n    }\r\n\r\n\r\n  }\r\n  render() {\r\n    this.fillVariables();\r\n    return (<div style={{display: 'inline'}}>\r\n\r\n      <button style={{margin:'5px'}} onClick={this.generateWrappedDocumentWithHeader} type=\"submit\">\r\n        Generate Word Document (Must Edit Header and Select 'Different First Page')\r\n      </button>\r\n      <button style={{margin:'5px', display: \"none\"}} onClick={this.generateWrappedDocumentNoHeader} type=\"submit\">\r\n        Generate Word Document Without Header\r\n      </button>\r\n\r\n    </div>)\r\n  }\r\n}\r\n\r\nexport default GenerateWordDocument;\r\n","// src/components/CatInputs.js\r\nimport React from \"react\"\r\nconst ParagraphInputs = (props) => {\r\n  return (\r\n    props.paragraphArray.map((val, index)=> {\r\n      let paraID = `paragraph-${index +2}`\r\n      return (\r\n        <div key={index} class=\"col100\">\r\n          <label htmlFor={paraID}>{`Paragraph #${index + 2}`}</label>\r\n          <textarea style={{height:'10%', width: '98%'}}\r\n            type=\"text\"\r\n            name={paraID}\r\n            data-id={index}\r\n            id={paraID}\r\n            placeholder={`Insert Paragraph ${index + 2}`}\r\n            value={props.paragraphArray[index].paraInfo}\r\n            className=\"paraInfo\"\r\n          />\r\n        </div>\r\n      )\r\n    })\r\n  )\r\n}\r\nexport default ParagraphInputs\r\n","import React, {\r\n  Component\r\n} from 'react';\r\nimport Moment from 'moment';\r\nimport ParagraphInputs from \"./AdditionalParagraphs\";\r\nimport '.././App.css';\r\nvar currentDate = new Date();\r\ncurrentDate.setDate(currentDate.getDate());\r\nvar formattedDateTwo = Moment(currentDate.toISOString()).format('YYYY-MM-DD');\r\nclass Form extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.initialState = {\r\n      attn: 'Insert Receiver of Memorandum Here',\r\n      from: 'Insert Sender Information Here',\r\n      subject: 'Insert Subject Here',\r\n      para1: 'Insert Paragraph 1',\r\n      para2: 'Insert Second Paragraph',\r\n      unit: 'Type your Unit Here',\r\n      dutytitle: \"Enter Signer's Position Here\",\r\n      rank: \"Select Signer's Rank\",\r\n      writersname: \"Insert Signer's Name FIRST MI. LAST\",\r\n      branch: \"USAF\",\r\n      paragraphArray: [\r\n        {\r\n          paraInfo: \"\"\r\n        }\r\n      ]\r\n    };\r\n    this.state = this.initialState;\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleChangeUpper = this.handleChangeUpper.bind(this);\r\n  }\r\n  handleParagraphChange = (e) => {\r\n    if ([\"paraInfo\"].includes(e.target.className)) {\r\n      let paragraphArray = [...this.state.paragraphArray]\r\n      paragraphArray[e.target.dataset.id][e.target.className] = e.target.value\r\n      this.setState({\r\n        paragraphArray\r\n      })\r\n    } else {\r\n      const {\r\n        name,\r\n        value\r\n      } = e.target;\r\n      this.setState({\r\n        [name]: value\r\n      });\r\n    }\r\n  }\r\n  addParagraph = (e) => {\r\n    this.setState((prevState) => ({\r\n      paragraphArray: [\r\n        ...prevState.paragraphArray, {\r\n          paraInfo: \"\"\r\n        }\r\n      ]\r\n    }));\r\n  }\r\n  convertParagraphArray(conversionArray) {\r\n    console.log(\"Converting Paragraph Array\")\r\n    var text = [];\r\n    var x;\r\n    for (x in conversionArray) {\r\n      text.push(conversionArray[x]);\r\n      console.log(text[x].paraInfo);\r\n    }\r\n  }\r\n  handleChange(event) {\r\n    const {\r\n      name,\r\n      value\r\n    } = event.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n  handleChangeUpper(event) {\r\n    this.setState({\r\n      writersNameUpper: event.target.value.toUpperCase()\r\n    });\r\n    this.setState({\r\n      writersname: event.target.value.toUpperCase()\r\n    });\r\n  }\r\n  onFormSubmit = (event) => {\r\n    //console.log(this.state);\r\n    //console.log(this.state.paragraphArray[0]);\r\n    event.preventDefault();\r\n    this.props.handleSubmit(this.state);\r\n    this.setState(this.initialState);\r\n  }\r\n  clearForm = memorandum => {\r\n    console.log(\"clearForm button pressed\");\r\n    this.setState({\r\n      memorandum: [\r\n        {\r\n          attn: \" \",\r\n          from: \" \",\r\n          subject: \" \",\r\n          para1: \" \",\r\n          para2: \" \",\r\n          unit: \" \",\r\n          date: \" \",\r\n          dutytitle: \" \",\r\n          rank: \" \",\r\n          writersname: \" \",\r\n          branch: \" \"\r\n        }\r\n      ]\r\n    });\r\n    sessionStorage.clear();\r\n    alert(\"The information in your memorandum has been cleared.\");\r\n    window.location.reload();\r\n  }\r\n  componentDidMount() {\r\n    //Prep form state for default value of todays date\r\n    this.setState({\r\n      date: formattedDateTwo\r\n    })\r\n  }\r\n  render() {\r\n      const {\r\n        attn,\r\n        from,\r\n        subject,\r\n        para1,\r\n        unit,\r\n        dutytitle,\r\n        rank,\r\n        writersname,\r\n      } = this.initialState;\r\n      //Identifies type and DOM target for each <td></td> type located on Table.js\r\n      let {\r\n        paragraphArray\r\n      } = this.state;\r\n\r\n        return (\r\n          <div style={{display: 'inline-block'}} class=\"w3-padding w3-round-xlarge w3-modal-content w3-card-4 w3-animate-zoom\">\r\n      <form class=\"formContainer w3-padding\" id=\"memorandumForm\" onSubmit={this.onFormSubmit} onChange={this.handleParagraphChange}>\r\n\r\n        <label>Header</label>\r\n        {\r\n        //FIRST LINE\r\n        }\r\n        <div class=\"col50\">\r\n          <input type=\"text\" name=\"unit\" id=\"unit\" placeholder={unit} onChange={this.handleChange} required />\r\n        </div>\r\n        <div class=\"col50\">\r\n          <input style={{height: '50px'}} type=\"date\" name=\"date\" id=\"date\" defaultValue={formattedDateTwo} onChange={this.handleChange}/>\r\n        </div>\r\n        {\r\n        //SECOND LINE\r\n        }\r\n        <div class=\"col50\">\r\n          <input type=\"text\" name=\"attn\" id=\"attn\" placeholder={attn} onChange={this.handleChange} required/>\r\n        </div>\r\n        <div class=\"col50\">\r\n          <input type=\"text\" name=\"from\" id=\"from\" placeholder={from} onChange={this.handleChange} required />\r\n        </div>\r\n        {\r\n        //THIRD and FOURTH LINEs\r\n        }\r\n        <div class=\"col100\">\r\n          <input style={{width:'98%'}} type=\"text\" name=\"subject\" id=\"subject\" placeholder={subject} onChange={this.handleChange} required />\r\n        </div>\r\n        <div class=\"col100\">\r\n          <label>Paragraph #1</label>\r\n          <textarea style={{height: '10%', width:'98%'}} type=\"text\" name=\"para1\" id=\"para1\" placeholder={para1} onChange={this.handleChange} required />\r\n          </div>\r\n        <ParagraphInputs paragraphArray={paragraphArray} />\r\n        <button onClick={this.addParagraph} type=\"button\">Add New Paragraph</button>\r\n            {\r\n\r\n                //SIGNATURE BLOCK\r\n            }\r\n\r\n    <label style={{display:'inline-block', width: '100%'}}>Signature Block</label>\r\n\r\n        <div class=\"col50\" >\r\n            <input\r\n                type=\"text\"\r\n                name=\"writersname\"\r\n                id=\"writersname\"\r\n                placeholder={writersname}\r\n                value={this.state.writersNameUpper}\r\n                onChange={this.handleChangeUpper}\r\n                required/>\r\n        </div>\r\n\r\n\r\n\r\n        <div class=\"col50\">\r\n            <select\r\n                type=\"text\"\r\n                name=\"branch\"\r\n                id=\"branch\"\r\n                defaultValue=\"USAF\"\r\n                required\r\n                onChange={this.handleChange} >\r\n                    <option value=\"\" disabled >Choose Your Branch</option>\r\n                    <option value=\"USAF\">United States Air Force</option>\r\n                    <option value=\"USA\">United States Army</option>\r\n                    <option value=\"USN\">United States Navy</option>\r\n                    <option value=\"USMC\">United States Marine Corps</option>\r\n            </select>\r\n        </div>\r\n\r\n        <div class=\"col50\">\r\n            <input\r\n                type=\"text\"\r\n                name=\"dutytitle\"\r\n                id=\"dutytitle\"\r\n                placeholder={dutytitle}\r\n                onChange={this.handleChange} required />\r\n        </div>\r\n\r\n        <div class=\"col50\">\r\n            <select\r\n                type=\"text\"\r\n                name=\"rank\"\r\n                id=\"rank\"\r\n                placeholder={rank}\r\n                defaultValue=\"\"\r\n                required\r\n                onChange={this.handleChange} >\r\n                    <option value=\"\" disabled>Choose Your Rank</option>\r\n                    <option value=\"AB\">Airman Basic</option>\r\n                    <option value=\"Amn\">Airman</option>\r\n                    <option value=\"A1C\">Airman First Class</option>\r\n                    <option value=\"SrA\">Senior Airman</option>\r\n                    <option value=\"SSgt\">Staff Sergeant</option>\r\n                    <option value=\"TSgt\">Technical Sergeant</option>\r\n                    <option value=\"MSgt\">Master Sergeant</option>\r\n                    <option value=\"SMSgt\">Senior Master Sergeant</option>\r\n                    <option value=\"CMSgt\">Chief Master Sergeant</option>\r\n                    <option value=\"1Lt\">First Lieutineant</option>\r\n                    <option value=\"2Lt\">Second Lieutineant</option>\r\n                    <option value=\"Capt\">Captain</option>\r\n                    <option value=\"Maj\">Major</option>\r\n                    <option value=\"Lt. Col.\">Lieutineant Colonel</option>\r\n                    <option value=\"Colonel\">Colonel</option>\r\n                    <option value=\"Brigadier Genearl\">Brigadier General</option>\r\n                    <option value=\"Major General\">Major General</option>\r\n                    <option value=\"Lieutineant General\">Lieutineant General</option>\r\n                    <option value=\"General\">General</option>\r\n            </select>\r\n        </div>\r\n\r\n\r\n        </form>\r\n        <div class=\"col50\">\r\n        <button style={{width: '100%'}} form=\"memorandumForm\" type=\"submit\">\r\n            Submit\r\n        </button>\r\n        </div>\r\n\r\n        <div class=\"col50\">\r\n        <button style={{width: \"100%\"}} onClick={this.clearForm} >\r\n            Clear Form\r\n        </button>\r\n\r\n        </div>\r\n</div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;\r\n","import React, {\r\n  Component\r\n} from 'react';\r\nimport '.././App.css';\r\nclass SetTest extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //Values that will be set in Set Test\r\n    this.state = {\r\n      attn: \"Colonel Name Here\",\r\n      from: \"TSGT Shall Not Be Named\",\r\n      subject: \"The Creation of Memorandums\",\r\n      para1: \"The following information on writing a memorandum comes from the AFH 33-337 Tongue and Quill, pages 183-186.  This template matches the format for the header on page 183, and the body on page 185.  The letterhead is in Arial with the “DEPARTMENT OF THE AIR FORCE” bolded, and the unit name un-bolded.  Addresses in the “MEMORADUM FOR” and “FROM”  are only if the letter for an off station addressee and are not required—however, office symbols are!\",\r\n      unit: \"31ST FIGHTER WING (USAFE)\",\r\n      date: \"20 April 2020\",\r\n      dutytitle: \"Superintendent, Operations\",\r\n      writersname: \"ORGANIC PENGUIN\",\r\n      rank: \"TSgt\",\r\n      branch: \"USAF\",\r\n      paragraphArray: [{\r\n        paraInfo: \"When writing the body start with number 1 directly under the S in subject.  If there is only one paragraph do not enter the number of paragraph.  Also, if it is more than one line it must line up under the number one, like it is here.\"\r\n      }, {\r\n        paraInfo: \"The signature block must be 5 line below the last paragraph, which should leave four empty line between the last paragraph and the first line of the signature block.  The block should also start at 2 spaces past the middle point of the letter (basically 3 3/8” on a word document with 1 inch borders.  If the letter is electronically signed it must be in this format “//signed/jsd/14May2008//” and must be part of a electronically signed email.  You must keep the email of the signed letter.  This is a bit confusing, but the process makes it a lot easier for us.  I will help you with this if you do not understand.\"\r\n      }, {\r\n        paraInfo: \"Repeat Paragraph 1, three times to Force Page Wrap:  The following information on writing a memorandum comes from the AFH 33-337 Tongue and Quill, pages 183-186.  This template matches the format for the header on page 183, and the body on page 185.  The letterhead is in Arial with the “DEPARTMENT OF THE AIR FORCE” bolded, and the unit name un-bolded.  Addresses in the “MEMORADUM FOR” and “FROM”  are only if the letter for an off station addressee and are not required—however, office symbols are! The following information on writing a memorandum comes from the AFH 33-337 Tongue and Quill, pages 183-186.  This template matches the format for the header on page 183, and the body on page 185.  The letterhead is in Arial with the “DEPARTMENT OF THE AIR FORCE” bolded, and the unit name un-bolded.  Addresses in the “MEMORADUM FOR” and “FROM”  are only if the letter for an off station addressee and are not required—however, office symbols are! The following information on writing a memorandum comes from the AFH 33-337 Tongue and Quill, pages 183-186.  This template matches the format for the header on page 183, and the body on page 185.  The letterhead is in Arial with the “DEPARTMENT OF THE AIR FORCE” bolded, and the unit name un-bolded.  Addresses in the “MEMORADUM FOR” and “FROM”  are only if the letter for an off station addressee and are not required—however, office symbols are!\"\r\n      }, {\r\n        paraInfo: \"If you end the letter with “any questions please contact” do not create a new paragraph just for that information.  Put it at the end of the last paragraph on the topic.  Like this paragraph.  If you have any questions please contact MSgt Joe Doe at 632-8620.\"\r\n      }]\r\n    };\r\n  }\r\n  testMemoSubmit = (event) => {\r\n    console.log('onFormSubmit2');\r\n    event.preventDefault();\r\n    this.props.testMemoSubmit(this.state);\r\n  }\r\n\r\n    render() {\r\n        //Identifies type and DOM target for each <td></td> type located on Table.js\r\n        return (\r\n          <div>\r\n            <form id=\"setTestForm\" onSubmit={this.testMemoSubmit} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SetTest;\r\n","import React, {\r\n  Component\r\n} from 'react';\r\nimport Form from './Form';\r\nimport SetTest from './SetTest';\r\nimport {\r\n  Redirect\r\n} from 'react-router-dom';\r\nimport DoDSeal from '../images/DoD Seal.PNG'\r\n//This function will convert the iamge into a URL Base64\r\nfunction toDataURL(url, callback) {\r\n  var xhr = new XMLHttpRequest();\r\n  xhr.onload = function() {\r\n    var reader = new FileReader();\r\n    reader.onloadend = function() {\r\n      callback(reader.result);\r\n    }\r\n    reader.readAsDataURL(xhr.response);\r\n  };\r\n  xhr.open('GET', url);\r\n  xhr.responseType = 'blob';\r\n  xhr.send();\r\n}\r\nclass Home extends Component {\r\n  state = {\r\n    memorandum: [{\r\n      \"attn\": \"Loading...\",\r\n      \"from\": \"Loading...\",\r\n      \"subject\": \"Loading...\",\r\n      \"para1\": \"Loading...\",\r\n      \"para2\": \"Loading...\",\r\n      \"unit\": \"Loading...\",\r\n      \"date\": \"Loading...\",\r\n      \"dutytitle\": \"Loading...\",\r\n      \"rank\": \"Loading...\",\r\n      \"writersname\": \"Loading...\",\r\n      \"branch\": \"Loading...\"\r\n    }],\r\n    toDashboard: false,\r\n  };\r\n  convertParagraphArray(conversionArray) {\r\n    //console.log(\"Converting Paragraph Array\")\r\n    var text = [];\r\n    var x;\r\n    for (x in conversionArray) {\r\n      text.push(conversionArray[x]);\r\n      //console.log(text[x].paraInfo);\r\n      sessionStorage.setItem(x, text[x].paraInfo);\r\n      sessionStorage.setItem(\"extraParagraphs\", x);\r\n    }\r\n  }\r\n  handleSubmit = memorandum => {\r\n    //Causes table to change values\r\n    this.setState({\r\n      memorandum: [memorandum]\r\n    });\r\n\r\n\r\n    //Set individual items as variables into session storage\r\n    var MEMOVAR = memorandum;\r\n    this.convertParagraphArray(MEMOVAR.paragraphArray);\r\n    sessionStorage.setItem(\"paragraphArray\", MEMOVAR.paragraphArray)\r\n    sessionStorage.setItem(\"attn\", MEMOVAR.attn);\r\n    sessionStorage.setItem(\"from\", MEMOVAR.from);\r\n    sessionStorage.setItem(\"subject\", MEMOVAR.subject);\r\n    sessionStorage.setItem(\"para1\", MEMOVAR.para1);\r\n    sessionStorage.setItem(\"unit\", MEMOVAR.unit);\r\n    sessionStorage.setItem(\"date\", MEMOVAR.date);\r\n    sessionStorage.setItem(\"dutytitle\", MEMOVAR.dutytitle);\r\n    sessionStorage.setItem(\"rank\", MEMOVAR.rank);\r\n    sessionStorage.setItem(\"writersname\", MEMOVAR.writersname.toUpperCase());\r\n    sessionStorage.setItem(\"branch\", MEMOVAR.branch);\r\n    //Run Image to URL function\r\n    toDataURL(DoDSeal, function(dataUrl) {\r\n      //console.log('RESULT:', dataUrl);\r\n      sessionStorage.setItem('MemoHeaderLogoBase', dataUrl);\r\n    })\r\n    //console.log(\"All storage actions have been completed, moving to memo page\");\r\n    //True state causes render section to redirect\r\n    this.setState({\r\n      toDashboard: true\r\n    });\r\n  }\r\n  testMemoSubmit = testMemo => {\r\n    //console.log('executed');\r\n    //Set state of table to values received from SetTest.js\r\n    this.setState({\r\n      memorandum: [testMemo]\r\n    });\r\n    //Execute traditional handle submit by passing same variables\r\n    this.handleSubmit(testMemo);\r\n  }\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      sessionStorage.setItem(\"paragraphArray\", null);\r\n      //Grab variables from session storage\r\n      var LSGETATTN = sessionStorage.getItem(\"attn\");\r\n      var LSGETFROM = sessionStorage.getItem(\"from\");\r\n      var LSGETSUBJECT = sessionStorage.getItem(\"subject\");\r\n      var LSGETPARA = sessionStorage.getItem(\"para1\");\r\n      var LSGETPARA2 = sessionStorage.getItem(2);\r\n      var LSGETUNIT = sessionStorage.getItem(\"from\");\r\n      var LSGETDATE = sessionStorage.getItem(\"date\");\r\n      var LSGETDUTYTITLE = sessionStorage.getItem(\"dutytitle\");\r\n      var LSGETRANK = sessionStorage.getItem(\"rank\");\r\n      var LSGETWRITERSNAME = sessionStorage.getItem(\"writersname\");\r\n      var LSGETBRANCH = sessionStorage.getItem(\"branch\");\r\n      //Change table values to what is pulled form session storage\r\n      this.setState({\r\n        memorandum: [{\r\n          attn: LSGETATTN,\r\n          from: LSGETFROM,\r\n          subject: LSGETSUBJECT,\r\n          para1: LSGETPARA,\r\n          para2: LSGETPARA2,\r\n          unit: LSGETUNIT,\r\n          date: LSGETDATE,\r\n          dutytitle: LSGETDUTYTITLE,\r\n          rank: LSGETRANK,\r\n          writersname: LSGETWRITERSNAME,\r\n          branch: LSGETBRANCH\r\n      }]\r\n      })\r\n      //console.log(this.state);\r\n    }, 500)\r\n  }\r\n  render() {\r\n      if (this.state.toDashboard === true) {\r\n        return ( < Redirect to = 'memorandum' / > )\r\n      }\r\n\r\n\r\n    return (\r\n\r\n      <div className=\"w3-center\">\r\n      <h2>Memorandum Builder</h2>\r\n          <Form handleSubmit={this.handleSubmit} />\r\n          <SetTest style={{marginTop: '10px', display:'inline-block'}} testMemoSubmit={this.testMemoSubmit}/>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\nexport default Home;\r\n","import React, {\r\n  Component\r\n} from 'react';\r\nimport jsPDF from 'jspdf'\r\nimport {\r\n  isMobile,\r\n  osName\r\n} from \"react-device-detect\"\r\n//Global Variables\r\nvar lineHeight = 1.15,\r\n  margin = 1,\r\n  fontSize = 12,\r\n  ptsPerInch = 72,\r\n  oneLineHeight = (fontSize * lineHeight) / ptsPerInch;\r\nvar LSGETATTN;\r\nvar LSGETFROM;\r\nvar LSGETSUBJECT;\r\nvar LSGETPARA;\r\nvar LSGETUNIT;\r\nvar LSGETDATE;\r\nvar LSGETDUTYTITLE;\r\nvar LSGETRANK;\r\nvar LSGETWRITERSNAME;\r\nvar LSGETBRANCH;\r\nvar LSGETNUMBEROFPARAGRAPHS;\r\nlet DATEHEIGHT = 1.75 + oneLineHeight;\r\nlet ATTNHEIGHT = DATEHEIGHT + oneLineHeight;\r\nlet FROMHEIGHT = ATTNHEIGHT + (oneLineHeight * 2);\r\nlet SUBJECTHEIGHT = FROMHEIGHT + (oneLineHeight * 2);\r\nlet PARAONEHEIGHT = SUBJECTHEIGHT + (oneLineHeight * 2);\r\nvar cursorY;\r\n//Generate pdf object as 'pdf'\r\nvar pdf = new jsPDF({\r\n  orientation: 'p',\r\n  unit: \"in\",\r\n  format: 'letter'\r\n});\r\n\r\nfunction addWrappedText({\r\n  text,\r\n  textWidth,\r\n  pdf,\r\n  fontSize = 12,\r\n  fontType = 'normal',\r\n  lineSpacing = oneLineHeight,\r\n  xPosition = margin,\r\n  initialYPosition = PARAONEHEIGHT,\r\n  pageWrapInitialYPosition = 1\r\n}) {\r\n  pdf.setFontType(fontType);\r\n  pdf.setFontSize(fontSize);\r\n  var textLines = pdf.splitTextToSize(text, textWidth); // Split the text into lines\r\n  var pageHeight = pdf.internal.pageSize.height - 1; // Get page height, we'll use this for auto-paging. TRANSLATE this line if using units other than `pt`\r\n  cursorY = initialYPosition;\r\n  textLines.forEach(lineText => {\r\n    if (cursorY > pageHeight) { // Auto-paging\r\n      pdf.addPage();\r\n      cursorY = pageWrapInitialYPosition;\r\n    }\r\n    pdf.text(xPosition, cursorY, lineText);\r\n    cursorY += lineSpacing;\r\n  })\r\n}\r\n\r\nfunction insertMultipleParagraphs() {\r\n  LSGETNUMBEROFPARAGRAPHS = sessionStorage.getItem(\"extraParagraphs\");\r\n  var paras;\r\n  if (sessionStorage.getItem(0) === ''){\r\n\r\n  }else{\r\n  for (paras = 0; paras <= LSGETNUMBEROFPARAGRAPHS; paras++) {\r\n    var PARAGRAPH = (paras + 2) + '.  ' + (sessionStorage.getItem(paras));\r\n    addWrappedText({\r\n      text: PARAGRAPH, // Put a really long string here\r\n      textWidth: 6.5,\r\n      pdf,\r\n      // Optional\r\n      fontSize: '12',\r\n      fontType: 'normal',\r\n      lineSpacing: oneLineHeight, // Space between lines\r\n      xPosition: margin, // Text offset from left of document\r\n      initialYPosition: cursorY + oneLineHeight, // Initial offset from top of document; set based on prior objects in document\r\n      pageWrapInitialYPosition: 1 // Initial offset from top of document when page-wrapping\r\n    });\r\n  }\r\n}}\r\nclass GenerateMemorandum extends Component {\r\n  state = {\r\n    dateHeight: 1.9166,\r\n    attnHEIGHT: this.dateHeight\r\n  }\r\n  generateWrappedMemorandum2 = () => {\r\n    //set Document font information\r\n    //HEADER\r\n    //Insert header DOD logo\r\n    pdf.addImage(sessionStorage.getItem('MemoHeaderLogoBase').toString(), 'PNG', .4, .4, 1, 1)\r\n    pdf.setFont(\"Helvetica\")\r\n    pdf.setFontStyle(\"bold\");\r\n    pdf.setFontSize(12);\r\n    pdf.text(\"DEPARTMENT OF THE AIR FORCE\", 4.25, .845, null, null, \"center\");\r\n    pdf.setFontStyle(\"normal\");\r\n    pdf.text(LSGETUNIT, 4.25, 1.039, \"center\");\r\n    //BODY\r\n    pdf.setFont('Times New Roman');\r\n    pdf.text(LSGETDATE, 7.5, DATEHEIGHT, null, null, \"right\");\r\n    pdf.text(\"MEMORANDUM FOR  \" + LSGETATTN, 1, ATTNHEIGHT);\r\n    pdf.text(\"FROM:  \" + LSGETFROM, 1, FROMHEIGHT);\r\n    pdf.text(\"SUBJECT:  \" + LSGETSUBJECT, 1, SUBJECTHEIGHT);\r\n    //PARAGRAPHS\r\n    //Split Text var textLines = pdf.splitTextToSize(text, maxLineWidth);\r\n    //Legacy paragraph wrapping\r\n    //var PARA1WRAPPED = pdf.splitTextToSize(\"1.  \" + LSGETPARA, maxLineWidth);\r\n    //var PARA1TextHeight = (PARA1WRAPPED.length * fontSize * lineHeight) / ptsPerInch;\r\n    var PARAGRAPH1 = '1.  ' + LSGETPARA;\r\n    addWrappedText({\r\n      text: PARAGRAPH1, // Put a really long string here\r\n      textWidth: 6.5,\r\n      pdf,\r\n      // Optional\r\n      fontSize: '12',\r\n      fontType: 'normal',\r\n      lineSpacing: oneLineHeight, // Space between lines\r\n      xPosition: margin, // Text offset from left of document\r\n      initialYPosition: PARAONEHEIGHT, // Initial offset from top of document; set based on prior objects in document\r\n      pageWrapInitialYPosition: 1 // Initial offset from top of document when page-wrapping\r\n    });\r\n\r\n\r\n    //2-X paragraphs\r\n    insertMultipleParagraphs(LSGETNUMBEROFPARAGRAPHS);\r\n\r\n\r\n    //SIGNATURE BLOCK\r\n    //var SIGNATUREHEIGHT = PARAONEHEIGHT + PARA1TextHeight + (oneLineHeight * 5);\r\n    pdf.text(LSGETWRITERSNAME + ', ' + LSGETRANK + ', ' + LSGETBRANCH, 4.5, cursorY + (oneLineHeight * 5));\r\n    pdf.text(LSGETDUTYTITLE, 4.5, cursorY + (oneLineHeight * 6));\r\n    pdf.setProperties({\r\n      title: LSGETSUBJECT,\r\n    })\r\n\r\n\r\n    //OS Detection for movile and various browsers. Generation incurrs errors depending on browser\r\n    if (osName === 'Mac OS') {\r\n      var string = pdf.output('datauristring');\r\n      var x = window.open();\r\n      x.document.open();\r\n      x.document.location = string;\r\n    } else if (isMobile) {\r\n      window.open(pdf.output('bloburl'))\r\n    } else {\r\n      var elseString = pdf.output('bloburi');\r\n      var embed = \"<iframe width='100%' type='application/pdf' height='100%' src='\" + elseString + \"'/>\"\r\n      var elseX = window.open();\r\n      elseX.document.open();\r\n      elseX.document.write(embed);\r\n      elseX.document.close();\r\n    }\r\n    //Reinitialize the pdf to clear previous states\r\n    pdf = new jsPDF({\r\n      orientation: 'p',\r\n      unit: \"in\",\r\n      format: 'letter'\r\n    });\r\n  }\r\n  fillVariables() {\r\n    LSGETATTN = sessionStorage.getItem(\"attn\");\r\n    LSGETFROM = sessionStorage.getItem(\"from\");\r\n    LSGETSUBJECT = sessionStorage.getItem(\"subject\");\r\n    LSGETPARA = sessionStorage.getItem(\"para1\");\r\n    LSGETUNIT = sessionStorage.getItem(\"unit\");\r\n    LSGETDATE = sessionStorage.getItem(\"date\");\r\n    LSGETDUTYTITLE = sessionStorage.getItem(\"dutytitle\");\r\n    LSGETRANK = sessionStorage.getItem(\"rank\");\r\n    LSGETWRITERSNAME = sessionStorage.getItem(\"writersname\");\r\n    LSGETBRANCH = sessionStorage.getItem(\"branch\");\r\n  }\r\n  render() {\r\n    this.fillVariables();\r\n    return (<div style={{display:'inline'}}>\r\n\r\n      <button style={{margin:'5px'}} onClick={this.generateWrappedMemorandum2} type=\"submit\">\r\n        Generate PDF\r\n      </button>\r\n    </div>)\r\n  }\r\n}\r\n\r\nexport default GenerateMemorandum;\r\n","import React, {\r\n  Component\r\n} from 'react';\r\nimport GenerateMemorandum from './GenerateMemorandum';\r\nimport GenerateWordDocument from './GenerateWordDocument'\r\nimport Moment from 'moment'\r\nvar LSGETATTN;\r\nvar LSGETFROM;\r\nvar LSGETSUBJECT;\r\nvar LSGETPARA;\r\nvar LSGETPARA2;\r\nvar LSGETUNIT;\r\nvar LSGETDATE;\r\nvar LSGETDUTYTITLE;\r\nvar LSGETRANK;\r\nvar LSGETWRITERSNAME;\r\nvar LSGETBRANCH;\r\nvar LSGETLOGO;\r\nvar extraParagraphs;\r\nvar extraParagraphWords = [];\r\n\r\nclass Memorandum extends Component {\r\n  state = {\r\n    memorandum: [{\r\n      \"attn\": \"Loading...\",\r\n      \"from\": \"Loading...\",\r\n      \"subject\": \"Loading...\",\r\n      \"para1\": \"Loading...\",\r\n      \"unit\": \"Loading...\",\r\n      \"date\": \"Loading...\",\r\n      \"dutytitle\": \"Loading...\",\r\n      \"rank\": \"Loading...\",\r\n      \"writersname\": \"Loading...\",\r\n      \"branch\": \"Loading...\"\r\n    }],\r\n    toDashboard: false,\r\n  };\r\n  processExtraParagraphs() {\r\n    extraParagraphs = sessionStorage.getItem(\"extraParagraphs\");\r\n    var x;\r\n    for (x = 0; x <= extraParagraphs; x++) {\r\n      extraParagraphWords[x] = sessionStorage.getItem(x);\r\n      //console.log(\"Paragraph \" + x + \" = \" + extraParagraphWords[x]);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      this.processExtraParagraphs()\r\n      //Set values within review page\r\n      this.setState({\r\n        memorandum: [{\r\n          attn: LSGETATTN,\r\n          from: LSGETFROM,\r\n          subject: LSGETSUBJECT,\r\n          para1: LSGETPARA,\r\n          para2: LSGETPARA2,\r\n          unit: LSGETUNIT,\r\n          date: LSGETDATE,\r\n          dutytitle: LSGETDUTYTITLE,\r\n          rank: LSGETRANK,\r\n          writersname: LSGETWRITERSNAME,\r\n          branch: LSGETBRANCH\r\n        }]\r\n      });\r\n    }, 200)\r\n  }\r\n  render() {\r\n      //Set memoranudm variable value to state object\r\n      const {\r\n        memorandum\r\n      } = this.state;\r\n      //Initialize 'Moment' date formatting locale to english\r\n      Moment.locale('en');\r\n      const paragraphItems = [];\r\n      if (sessionStorage.getItem(0) === ''){\r\n\r\n      }else {\r\n      for (const [index, value] of extraParagraphWords.entries()) {\r\n        paragraphItems.push( < div key = {\r\n          index\r\n        } > {\r\n          index + 2\r\n        }. {\r\n          value\r\n        } < br / > < br / > < /div>)\r\n      }}\r\n    return (\r\n        <div>\r\n          <GenerateMemorandum /> <GenerateWordDocument/>\r\n          <br /><br />\r\n          DATE: {Moment(memorandum[0].date).format('DD MMMM YYYY')}\r\n          <br /><br />\r\n          MEMORANDUM FOR  {memorandum[0].attn}\r\n          <br /><br />\r\n          FROM:  {memorandum[0].from}\r\n          <br /><br />\r\n          SUBJECT:  {memorandum[0].subject}\r\n          <br /><br />\r\n          1. {memorandum[0].para1}\r\n          <br /><br />\r\n          {paragraphItems}\r\n          Unit: {memorandum[0].unit}\r\n          <br /><br />\r\n          Duty Position: {memorandum[0].dutytitle}\r\n          <br /><br />\r\n          {memorandum[0].writersname}, {memorandum[0].rank}, {memorandum[0].branch}\r\n          <br /><br />\r\n\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nclass Review extends Component {\r\n\r\n  state={\r\n    filled: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      //Handler for checking if the form has been filled out. If it has then the Memorandum section will be come viewable within the Review class render\r\n      //Get variables from saved input and assign to object\r\n      LSGETATTN = sessionStorage.getItem(\"attn\");\r\n      LSGETFROM = sessionStorage.getItem(\"from\");\r\n      LSGETSUBJECT = sessionStorage.getItem(\"subject\");\r\n      LSGETPARA = sessionStorage.getItem(\"para1\");\r\n      LSGETPARA2 = sessionStorage.getItem(\"paragraphArray\");\r\n      LSGETUNIT = sessionStorage.getItem(\"unit\");\r\n      LSGETDATE = sessionStorage.getItem(\"date\");\r\n      LSGETDUTYTITLE = sessionStorage.getItem(\"dutytitle\");\r\n      LSGETRANK = sessionStorage.getItem(\"rank\");\r\n      LSGETWRITERSNAME = sessionStorage.getItem(\"writersname\");\r\n      LSGETBRANCH = sessionStorage.getItem(\"branch\");\r\n      LSGETLOGO = sessionStorage.getItem(\"MemoHeaderLogoBase\");\r\n\r\n      if(LSGETATTN != undefined){\r\n        console.log(\"Date detected\")\r\n        this.setState({filled: true})\r\n      }else if(LSGETATTN == undefined){\r\n        console.log(LSGETATTN)\r\n        console.log(\"date not detected\")\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n          <h2>Memorandum Review</h2>\r\n          {!this.state.filled && <h2>Please fill out the form and sumbit</h2>}\r\n          {this.state.filled &&\r\n          <Memorandum />}\r\n        </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Review;\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, HashRouter, Switch, Route, Link } from 'react-router-dom';\r\nimport Home from './components/Home';\r\nimport About from './components/About';\r\nimport Memorandum from './components/Memorandum';\r\nimport GenerateMemorandum from './components/GenerateMemorandum';\r\n\r\n\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props){\r\n      super(props);\r\n      this.state={\r\n          devMode: true,\r\n      }\r\n  }\r\nToggleButton(){\r\n  this.setState((currentState) => ({\r\n      devMode: !currentState.devMode,\r\n  }));\r\nconsole.log(this.state.devMode)\r\n}\r\n\r\n  AirForceWriterLink(){\r\n      window.open(\"http://www.airforcewriter.com/officialmemorandum.htm\");\r\n  }\r\n  TheTongueAndQuillLink(){\r\n      window.open(\"https://static.e-publishing.af.mil/production/1/saf_cio_a6/publication/afh33-337/afh33-337.pdf\");\r\n  }\r\n  GitHubLink(){\r\n      window.open(\"https://github.com/organic-penguin/OfficialMemorandumMaker\")\r\n  }\r\n\r\n\r\n  render() {\r\n\r\nreturn (\r\n<HashRouter basename='/'>\r\n  <div>\r\n    <h2>Wecome to the Official Memorandum Maker</h2>\r\n{/*\r\n    <svg style={{width: '80'}} className=\"devCorner\" viewBox=\"0 0 80 80\" aria-hidden=\"true\">\r\n      <path fill=\"rgb(70, 74, 78)\" d=\"M80 0L80 80L0 0L80 0Z\"></path>\r\n    </svg>\r\n\r\n\r\n    <label style={{transform: 'rotate(45deg)', margin: '0', top:'18', height: '20' }} className=\"devCorner switch\"><input type=\"checkbox\" className=\"\" onClick={()=> this.ToggleButton() } /><span className=\"slider round\"></span></label>\r\n*/}\r\n    <nav className=\"navbar w3-round-xlarge navbar-expand-lg navbar-light\" style={{height: 'auto', boxShadow: '0 4px 10px 0 rgba(0,0,0,0.2), 0 4px 20px 0 rgba(0,0,0,0.19)', backgroundColor: '464a4e'}}>\r\n      <ul className=\"w3-center\" style={{flex:'auto', padding:'0', margin:'0'}}>\r\n        <Link to={'/'}><button style={{margin: '5px', height: '50px', display: 'inline'}}> Home </button></Link>\r\n        <Link to={'/memorandum'}><button style={{margin: '5px', height: '50px', display: 'inline'}}> Review </button></Link>\r\n        <TESTParametersButton />\r\n        <button style={{margin: '5px', height: '50px', display: 'inline'}} onClick={this.AirForceWriterLink} type=\"button\">Air Force Writer</button>\r\n        <button style={{margin: '5px', height: '50px', display: 'inline'}} onClick={this.TheTongueAndQuillLink} type=\"button\">The Tongue and Quill</button>\r\n        <button style={{paddingTop: '10px', margin: '5px', height: '50px', display: 'inline'}} onClick={this.GitHubLink} type=\"button\">\r\n          <icon ariaHidden=\"true\" className=\"fa fa-github fa-2x\" /></button>\r\n      </ul>\r\n    </nav>\r\n    <hr />\r\n    <Switch>\r\n      <Route exact path='/' component={Home} />\r\n      <Route path='/memorandum' component={Memorandum} />\r\n      <Route path='/about' component={About} />\r\n      <Route path='/generatememorandum' component={GenerateMemorandum} />\r\n    </Switch>\r\n  </div>\r\n</HashRouter>\r\n);\r\n}\r\n}\r\n\r\nconst TESTParametersButton = () => (\r\n<button style={{margin: '5px', height: '50px', display: 'none'}} form=\"setTestForm\" type=\"submit\">Set Test Parameters</button>\r\n)\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\n\n\nReactDOM.render(<App />, document.getElementById('App'));\n"],"sourceRoot":""}